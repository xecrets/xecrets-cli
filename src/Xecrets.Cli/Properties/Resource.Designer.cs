//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xecrets.Cli.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xecrets.Cli.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xecrets.Cli is licensed under the GNU General Public License, version 3 or later (GPL-3.0-or-later)
        ///unless otherwise specified for particular components.
        ///
        ///Details
        ///
        ///Xecrets.Cli, Xecrets.Net.Cryptography, Xecrets.Cli.Test:
        ///
        ///- Licensed under GPL-3.0-or-later. Copyright © 2022-2024 Svante Seleborg.
        ///
        ///Xecrets.Slip39, Xecrets.Slip39.Test:
        ///
        ///- Licensed under the MIT license. Original work by Lucas Ontivero, modified by Svante Seleborg.
        ///Copyright © 2024 Lucas Ontivero, modifications Copyright © 2024 Svante Seleborg.
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string contributors {
            get {
                return ResourceManager.GetString("contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gpl_3_0 {
            get {
                return ResourceManager.GetString("gpl_3_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please support development and buy a subscription. See https://www.axantum.com/ ..
        /// </summary>
        internal static string GplBlurb {
            get {
                return ResourceManager.GetString("GplBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *** IMPORTANT ***
        ///
        ///Always test on copies of non-essential files before using this program on real data. Encryption is
        ///no protection against data loss, always keep adequate backups of your important files.
        ///
        ///There is no backdoor or password reset function! If you encrypt a file, and do not know the original
        ///password or have access to a private key matching a public key used when encrypting the file, the
        ///contents of the file is irretrievably lost and cannot be recovered.
        ///
        ///Xecrets Cli is distributed in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string help_details {
            get {
                return ResourceManager.GetString("help_details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] index {
            get {
                object obj = ResourceManager.GetObject("index", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintenance subscription for {licensee} for builds no newer than {expiration}.\nThank you! See https://www.axantum.com/ ..
        /// </summary>
        internal static string LicensedDownloadBlurb {
            get {
                return ResourceManager.GetString("LicensedDownloadBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintenance subscription for {licensee} expired for builds newer than {expiration}.\nIt&apos;s still free for non-programmatic use! See https://www.axantum.com/ ..
        /// </summary>
        internal static string LicensedExpiredDownloadBlurb {
            get {
                return ResourceManager.GetString("LicensedExpiredDownloadBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintenance subscription &apos;{product}&apos; for {licensee} is not valid for this software.\nIt&apos;s still free for non-programmatic use! See https://www.axantum.com/ ..
        /// </summary>
        internal static string LicenseNotValidForProductBlurb {
            get {
                return ResourceManager.GetString("LicenseNotValidForProductBlurb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----BEGIN PUBLIC KEY-----
        ///MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE57HBftSv6/K0Fxm+IQRAqY7E3/dr
        ///+6kW/2c687JxT3MgChMZ+mimqrlRklmMghcNMG6lMx806YNbusGmpHrq4g==
        ///-----END PUBLIC KEY-----.
        /// </summary>
        internal static string LicensePublicKeyProduction {
            get {
                return ResourceManager.GetString("LicensePublicKeyProduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----BEGIN PUBLIC KEY-----
        ///MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEbehILxdHBD1NG6EYAIDzEbdumyL0
        ///Idyr4Ko9NUmkM4V6HGk0HUD0lmIM0l1WTppDFoKfdOflwpxXqISTTjQODg==
        ///-----END PUBLIC KEY-----.
        /// </summary>
        internal static string LicensePublicKeyTest {
            get {
                return ResourceManager.GetString("LicensePublicKeyTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright © 2024 Lucas Ontivero
        ///Modifications Copyright © 2024 Svante Seleborg
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mit {
            get {
                return ResourceManager.GetString("mit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xecrets Cli - A cross platform AxCrypt compatible tool for applied strong cryptography.
        ///Portions Copyright 2022-2024, Svante Seleborg, All Rights Reserved.
        ///BETA {gpl} Version {version} {buildutc} {runtime}
        ///
        ///This program is free software; It is licensed under GNU General Public License version 3 or any
        ///later version.
        ///
        ///{blurb}.
        /// </summary>
        internal static string splash {
            get {
                return ResourceManager.GetString("splash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No maintenance subscription found. It&apos;s still free for non-programmatic use. See https://www.axantum.com/ ..
        /// </summary>
        internal static string UnlicensedBlurb {
            get {
                return ResourceManager.GetString("UnlicensedBlurb", resourceCulture);
            }
        }
    }
}
